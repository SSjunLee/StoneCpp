#IncludeRegexLine: ^[ 	]*[#%][ 	]*(include|import)[ 	]*[<"]([^">]+)([">])

#IncludeRegexScan: ^.*$

#IncludeRegexComplain: ^$

#IncludeRegexTransform: 

D:/code/cpp/Stone/BasicParser.h
ParseException.h
D:/code/cpp/Stone/ParseException.h
ast/AstTree.h
D:/code/cpp/Stone/ast/AstTree.h
ast/AstNodeType.h
D:/code/cpp/Stone/ast/AstNodeType.h
Lexer.h
D:/code/cpp/Stone/Lexer.h
Parse.hpp
D:/code/cpp/Stone/Parse.hpp
unordered_set
-

D:/code/cpp/Stone/Env.h
stype/BasicType.h
D:/code/cpp/Stone/stype/BasicType.h

D:/code/cpp/Stone/FuncParser.h
BasicParser.h
D:/code/cpp/Stone/BasicParser.h

D:/code/cpp/Stone/Lexer.h
iostream
-
queue
-
Token.hpp
D:/code/cpp/Stone/Token.hpp
ParseException.h
D:/code/cpp/Stone/ParseException.h
regex
-

D:/code/cpp/Stone/NestEnv.hpp
Env.h
D:/code/cpp/Stone/Env.h
unordered_map
-

D:/code/cpp/Stone/Parse.hpp
unordered_set
-
unordered_map
-
utility
-
vector
-
ast/AstTree.h
D:/code/cpp/Stone/ast/AstTree.h
Lexer.h
D:/code/cpp/Stone/Lexer.h
ParseException.h
D:/code/cpp/Stone/ParseException.h

D:/code/cpp/Stone/ParseException.h
string
-
exception
-
Token.hpp
D:/code/cpp/Stone/Token.hpp

D:/code/cpp/Stone/StoneException.h
stdexcept
-
string
-

D:/code/cpp/Stone/Token.hpp
memory
-
StoneException.h
D:/code/cpp/Stone/StoneException.h

D:/code/cpp/Stone/ast/AstNodeType.h
AstTree.h
D:/code/cpp/Stone/ast/AstTree.h

D:/code/cpp/Stone/ast/AstTree.h
memory
-
vector
-
../Token.hpp
D:/code/cpp/Stone/Token.hpp
../stype/Object.h
D:/code/cpp/Stone/stype/Object.h
../Env.h
D:/code/cpp/Stone/Env.h

D:/code/cpp/Stone/main.cpp
iostream
-
fstream
-
Token.hpp
D:/code/cpp/Stone/Token.hpp
BasicParser.h
D:/code/cpp/Stone/BasicParser.h
NestEnv.hpp
D:/code/cpp/Stone/NestEnv.hpp
FuncParser.h
D:/code/cpp/Stone/FuncParser.h

D:/code/cpp/Stone/stype/BasicType.h
memory
-
utility
-
ostream
-
../StoneException.h
D:/code/cpp/Stone/StoneException.h
../ast/AstTree.h
D:/code/cpp/Stone/ast/AstTree.h
Object.h
D:/code/cpp/Stone/stype/Object.h

D:/code/cpp/Stone/stype/Object.h
memory
-
../StoneException.h
D:/code/cpp/Stone/StoneException.h

